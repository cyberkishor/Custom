
import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import smusemiv.connection.connection;
import utilities.validator;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author user
 */
public class editcountry extends javax.swing.JInternalFrame {

    /**
     * Creates new form editcountry
     */
     Connection conn = null;
    ResultSet rs = null;
    PreparedStatement pst = null;
    public editcountry() {
        initComponents();
        conn = connection.getConnection();
        this.fillCountryCombo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        delete = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        save = new javax.swing.JButton();
        selectCountry = new javax.swing.JComboBox();
        code = new javax.swing.JTextField();
        cmp_name = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Add / Edit COUNTRY");

        delete.setText("Delete Record");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        jLabel2.setText("Add/Edit :");

        save.setText("Save/Update");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });

        selectCountry.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Add New" }));
        selectCountry.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                selectCountryItemStateChanged(evt);
            }
        });
        selectCountry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectCountryActionPerformed(evt);
            }
        });

        code.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                codeActionPerformed(evt);
            }
        });

        cmp_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmp_nameActionPerformed(evt);
            }
        });

        jLabel3.setText("Country Code");

        jLabel4.setText("Country :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cmp_name, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(code)
                                        .addComponent(selectCountry, 0, 130, Short.MAX_VALUE))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(save, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(60, 60, 60)
                        .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(selectCountry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(code, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmp_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(save, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void selectCountryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectCountryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_selectCountryActionPerformed

    private void codeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_codeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_codeActionPerformed

    private void selectCountryItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_selectCountryItemStateChanged
        String Action = selectCountry.getSelectedItem().toString();
        if(!(Action.equals("Add New"))){
            ComboboxItem item = (ComboboxItem) selectCountry.getSelectedItem();
            cmp_name.setText(item.toString());
            code.setText(item.getCode());
            code.setEditable(false);
           
        }else{
            cmp_name.setText("");
            code.setText("");
            code.setEditable(true);
        } 
    }//GEN-LAST:event_selectCountryItemStateChanged

    private void cmp_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmp_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmp_nameActionPerformed

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        
        
        String Name = cmp_name.getText();
        String Code = code.getText();
        String Action = selectCountry.getSelectedItem().toString();
        String sql;
        validator v  = new validator();
        String error = "";
        
        if (!v.validateName(Name)) {
            error += "Invalid  Name \n";
        }
        if (!v.validateUsername(Code)) {
            error += "Invalid Code \n";
            
        }
        if(!"".equals(error)) {
            JOptionPane.showMessageDialog(null, error, "Error",JOptionPane.WARNING_MESSAGE);
            
        } else {
        
        
            if(Action.equals("Add New")){
                sql = "INSERT INTO country(Code,Country) values (?,?)";
            }else{
                sql ="UPDATE country set Code =? ,Country = ? WHERE Code='"+Code+"'";
            }

            try{
                pst = conn.prepareStatement(sql);
                pst.setString(1,Code);
                pst.setString(2, Name);

                pst.executeUpdate();
    //             this.fillCountryCombo();
                JOptionPane.showMessageDialog(this,"Item saved");
                this.dispose();

            }catch(Exception e){
                JOptionPane.showMessageDialog(this, e);
            }
        }
    }//GEN-LAST:event_saveActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        if(JOptionPane.showConfirmDialog(null, "Are u Sure ?", "Delate", JOptionPane.OK_CANCEL_OPTION) == 0)
        {
            String Code = code.getText();
            if(!(Code.equals(""))){
                String sql ="DELETE FROM country WHERE Code =?";
                try{
                    pst = conn.prepareStatement(sql);
                    pst.setString(1,Code);
                    pst.executeUpdate();
                    JOptionPane.showMessageDialog(this,"Item Deleted");
                    this.dispose();
//                    this.fillCountryCombo();
//                    cmp_name.setText("");
//                    code.setText("");
                    
                }catch(SQLException | HeadlessException e){
                    JOptionPane.showMessageDialog(this, e);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Select Country !", "Error",JOptionPane.WARNING_MESSAGE);
            }
            
        }
    }//GEN-LAST:event_deleteActionPerformed
    
    private void fillCountryCombo(){
        String sql = "Select * from country";
        try{
            pst = conn.prepareStatement(sql);
            rs = pst.executeQuery();
            while(rs.next()){
                
                selectCountry.addItem(new ComboboxItem(rs.getString("Code"),rs.getString("Country")));
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, e);
        }
    }
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField cmp_name;
    private javax.swing.JTextField code;
    private javax.swing.JButton delete;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JButton save;
    private javax.swing.JComboBox selectCountry;
    // End of variables declaration//GEN-END:variables
}
